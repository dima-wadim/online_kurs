version: '3'

services:
  db:
    restart: always
    image: postgres
    container_name: smit_db
    env_file:
      - ./.env
    expose:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis
#    container_name: smit_redis
    expose:
      - '6379:6379'
      - '8001:8000'
    volumes:
      - redis_data:/data
    env_file:
      - ./.env

  app:
    build: .
    tty: true
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy


  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    volumes:
      - .:/code
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    tty: true
    restart: always
    command: celery -A config beat -l info -S django
    depends_on:
      - redis
      - app

volumes:
  postgres_data:
  redis_data:
